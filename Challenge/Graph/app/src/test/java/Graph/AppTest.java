/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Graph;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    public void addNode(){
        GraphClass graph = new GraphClass();

        graph.addVertex("Sufian");
        graph.addVertex("Hamdan");

        assertNotNull(graph.getVertices());
        assertEquals(2, graph.getVertices().size());
        assertTrue(graph.getVertices().contains(new Vertex("Sufian")));
    }

    @Test
    public void addEdge(){
        GraphClass graph = new GraphClass();

        graph.addVertex("Sufian");
        graph.addVertex("Hamdan");

        graph.addEdge("Sufian","Hamdan");

        assertNotNull(graph.getVertices());
        assertEquals(2, graph.getVertices().size());
        assertTrue(graph.getNeighbors("Sufian").contains(new Vertex("Hamdan")));
        assertTrue(graph.getNeighbors("Hamdan").contains(new Vertex("Sufian")));
    }

    @Test
    public void allNodes(){
        GraphClass graph = new GraphClass();

        graph.addVertex("Sufian");
        graph.addVertex("Ahmad");
        graph.addVertex("Sally");

        assertEquals(3, graph.getVertices().size());
        assertTrue(graph.getVertices().contains(new Vertex("Sufian")));
        assertTrue(graph.getVertices().contains(new Vertex("Ahmad")));
        assertTrue(graph.getVertices().contains(new Vertex("Sally")));
        assertFalse(graph.getVertices().contains(new Vertex("ali")));
    }

    @Test
    public void nodeNeighbors(){
        GraphClass graph = new GraphClass();

        graph.addVertex("Sufian");
        graph.addVertex("Hamdan");

        graph.addEdge("Sufian","Hamdan");

        assertEquals(1, graph.getNeighbors("Sufian").size());
        assertTrue(graph.getNeighbors("Sufian").contains(new Vertex("Hamdan")));
        assertTrue(graph.getNeighbors("Hamdan").contains(new Vertex("Sufian")));
    }

    @Test
    public void nodeNeighborsWeight(){
        GraphClass graph = new GraphClass();

        graph.addVertex("Sufian");
        graph.addVertex("Ahmad");
        graph.addVertex("Mahmoud3");

        graph.addEdge("Sufian","Ahmad",3);
        graph.addEdge("Sufian","Mahmoud3",2);

        assertEquals(2, graph.getNeighbors("Sufian").size());
        assertEquals(3, graph.getNeighbors("Sufian").get(0).weight);
        assertEquals(2, graph.getNeighbors("Sufian").get(1).weight);
//    assertTrue(graph.getNeighbors("Mahmoud2").contains(new Vertex("Mahmoud")));
    }

    @Test
    public void emptyGraph(){
        GraphClass graph = new GraphClass();

        assertNull(graph.getNeighbors("Sufian"));
    }

    @Test
    public void oneNodeOneEdge(){
        GraphClass graph = new GraphClass();

        graph.addVertex("Sufian");
        graph.addEdge("Sufian","Sufian");

        System.out.println(graph.getNeighbors("Sufian"));

        assertEquals(2, graph.getNeighbors("Sufian").size());
        assertTrue( graph.getNeighbors("Sufian").contains(new Vertex("Sufian")));
        assertEquals(1, graph.getVertices().size());

    }
}
