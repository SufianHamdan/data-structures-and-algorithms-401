/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Quick.sort;

import java.util.Arrays;

public class App {


    public static void main(String[] args) {

        App a = new App();


        System.out.println("Sample Array");
        int[] arr = {8, 4, 23, 42, 16, 15, 1, -1};
        a.quickSort(arr,0,7);
        System.out.println(Arrays.toString(arr));

        System.out.println("ReverseSorted Array");
        int[] ReverseSorted = {20, 18, 12, 8, 5, -2};
        a.quickSort(ReverseSorted,0,5);
        System.out.println(Arrays.toString(ReverseSorted));

        System.out.println("FewUniques Array");
        int[] FewUniques = {5, 12, 7, 5, 5, 7};
        a.quickSort(FewUniques,0,5);
        System.out.println(Arrays.toString(FewUniques));

        System.out.println("NearlySorted Array");
        int[] NearlySorted = {2, 3, 5, 7, 13, 11};
        a.quickSort(NearlySorted,0,5);
        System.out.println(Arrays.toString(NearlySorted));
    }

    public void quickSort(int[] arr, int left, int right) {
        if (left < right) {
            int position = partition(arr, left, right);
            quickSort(arr, left, position - 1);
            quickSort(arr, position + 1, right);
        }
//        System.out.println(Arrays.toString(arr));
//        System.out.println("Left "+left + " Right "+right);
    }

    private int partition(int[] arr, int left, int right) {
        int pivot = arr[right];
        int low = left - 1;
        for (int i = left; i < right; i++) {
            if (arr[i] <= pivot) {
                low++;
                swap(arr, i, low);
            }
        }
        swap(arr, right, low + 1);

        return low + 1;
    }

    private void swap(int[] arr, int i, int low) {
        int temp;
        temp = arr[i];
        arr[i] = arr[low];
        arr[low] = temp;
    }


}
