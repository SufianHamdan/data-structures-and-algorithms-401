/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stack.Queue;

import stack.Queue.FifoAnimalShelter.Animal;
import stack.Queue.FifoAnimalShelter.AnimalShelter;
import stack.Queue.FifoAnimalShelter.Cat;
import stack.Queue.FifoAnimalShelter.Dog;

public class App {
    public static void main(String[] args) throws Exception{


        // Stack object initialize and test
        /*
        Stack<String> s = new Stack<String>();

        s.push("s");
        s.push("u");
        s.push("f");
        s.push("i");
        s.push("a");
        s.push("n");

        System.out.println("Your New Stack Is: " + s.toString());
        System.out.println("First element is: " + s.peek());
        System.out.println("<<< POPPING First Value >>>");
        System.out.println("Popped Value is: " + s.pop());
        System.out.println("Your New List Is: " + s.toString());
        System.out.println("Is The Stack Empty: " + s.isEmpty());
        System.out.println("First element is: " + s.peek());

         */


        // Queue object initialize and test
        /*
        Queue<String> q = new Queue<>();
        q.enqueue("s");
        q.enqueue("u");
        q.enqueue("f");
        q.enqueue("i");
        q.enqueue("a");
        q.enqueue("n");

        System.out.println("Your New Queue Is: " + q.toString());
        System.out.println("Peeked value Is: " + q.peek());
        System.out.println("Dequeued value Is: " + q.dequeue());
        System.out.println("Your New Queue Is: " + q.toString());
        System.out.println("Peeked value Is: " + q.peek());
        System.out.println("Is Your Queue Empty ? " + q.isEmpty());
        */

        // PseudoQueue object initialize and test

//        PseudoQueue<String> pq = new PseudoQueue<String>();
//        pq.enqueue("s");
//        pq.enqueue("u");
//        pq.enqueue("f");
//        pq.enqueue("i");
//        pq.enqueue("a");
//        pq.enqueue("n");
//        System.out.println(pq.toString());
//        pq.dequeue();
//        System.out.println(pq.toString());

        AnimalShelter shelter = new AnimalShelter();

        Cat cat1 = new Cat("cat1");
        Cat cat2 = new Cat("cat2");
        Cat cat3 = new Cat("cat3");
        Dog dog1 = new Dog("dog1");
        Dog dog2 = new Dog("dog2");

        shelter.enqueue(cat1);
        shelter.enqueue(cat2);
        shelter.enqueue(cat3);
        shelter.enqueue(dog1);
        shelter.enqueue(dog2);

        Animal a = shelter.dequeue("cat");
        System.out.println("Cat's Name is : " + a.getName());

    }



}
